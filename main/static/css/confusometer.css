@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@100;400;600&display=swap');

/* IMPORTANT: 
1. to adjust the confusometer using JS go to the .meter-fill and transform:rotate and change
the value inside accordingly
2. To adjust the specifiermeter level change the value within HTML
3. To adjust the specifiermeter order change the order at the end of the CSS file*/

body {
    display: flex;
    flex-direction: row;
    align-items: flex-start;
    overflow: hidden;
    flex-wrap: wrap;
    justify-content: center;
    overflow:hidden;
}

.miscellaneous {
    width: 100%;
    height: 15vh;
}

.circle {
    position: absolute;
    top: 5%;
    right: 5%;
    width: 3.5em;
    height: 3.5em;
    border-radius: 50%;
    overflow: hidden;
    border: solid #7468F8 0.35em;
    box-sizing: border-box;
}
.profile {
    width: 100%;
    height: 100%;
    object-fit: fill;
    margin: auto;
}

.back {
    position: absolute;
    top: 5%;
    left: 5%;
    width: 60px;
    height: 60px;
    border: dotted;
}
.arrow {
    position: absolute;
    top: 5%;
    left: 2%;
    margin: auto;
    color:#7468F8;
}
.arrow:hover {
    color:#C9C5FF;
    transition: 0.25s;
}

.confusometer {
    box-sizing: border-box;
    /*I'm not quite sure why putting 50vw causes it to cascade but wtv*/
    width: 48vw;
    height:70vh;
    margin:0;
}

.specifiers {
    box-sizing: border-box;
    width: 48vw;
    height:70vh;
    margin:0;
}

h1 {
    text-align: center;
    height: 15%;
    margin:auto;
    font-family: Poppins;
    font-style: normal;
    font-weight: 600;
    /* quick trick to scale this thing LMAO*/
    font-size: 4vw; 
    color: #7D7D7D; 
    white-space: nowrap;
}

/* did this because I was unable to position something by absolute means within the
flex-box : I need the background to be 'outside' of and not interacting
with any other element*/
.mainmeter-wrap {
    margin-top: 3%;
    position:relative;
    display:flex;
    justify-content: center;
    align-content: flex-start;
    flex-wrap: wrap;
    width: 100%;
    height: 85%;
    background: url("confusobackground.png");
    background-size: contain;
    background-position-x: center;
    background-repeat: no-repeat;
    
}

/* this quirky code makes the height of the box 50% of the height of the WIDTH
Its important to note here that the meter therefore scales with the width of
the box, which scales with the width of the browser. Height is irrelevant, but
future child elements must be scaled to width for browser flexibility*/
.meter-body {
    width: 70%;
    height: 0;
    padding-bottom: 35%;
    background: linear-gradient(90deg, #7468F8 0%, #BE95D8 53.05%, #FFBCBC 100%);
    border-top-left-radius: 100% 200%;
    border-top-right-radius: 100% 200%;
    overflow:hidden;
    position: relative;
}
/*this rotates a lower circle around the upper circle for every value of 'confusion'*/
.meter-fill {
    background: linear-gradient(180deg, rgba(229, 229, 229, 0.6) -9.73%, #FFFFFF 100%);
    position:absolute;
    top: 100%;
    left: 0;
    height: 100%;
    width: 100%;
    border-top-right-radius: 10% 10%;
    transform-origin: center top;
    transform: rotate(-60deg);
    transition: transform 0.2s ease-out;
}

.meter-inner {
    background: #f8f8ff;
    position: absolute;
    margin-left: 20%;
    bottom: 0;
    height:60%;
    width: 60%;
    border-top-left-radius: 100% 200%;
    border-top-right-radius: 100% 200%;
}

div.mainmeter-number {
    position:relative;
    width: 100%;
    height: 3em;
}

h2.mainmeter-number {
    position: absolute;
    bottom:40%;
    /* scaled to width because the main-meter is scaled to width*/
    font-size: 5vw;
    width:100%;
    text-align: center;
    margin:auto;
    font-family: Poppins;
    font-style: normal;
    font-weight: 600;
    color: #7266FF;
}

.logowrapper {
    width: 100%;
    display: flex;
    justify-content: center;
}

.specifiertext {
    height: 20%;
}

.specifiermeter-wrap {
    height:80%;
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
}

.specifiermeter {
    height: 20%;
    width: 90%;
    box-sizing: border-box;
    display: flex;
    justify-content: flex-start;
    align-items: center;
}

.specifiermeter-header {
    width: 40%;
    box-sizing: border-box;
    display:flex;
    justify-content: flex-end;
    align-items: center;
}

.specifiermeter-meter {
    width: 60%;
    height:120%;
    margin:0;
    display: flex;
    align-items: center;
}

p {
    margin:0;
    margin-right: 12px;
    font-family: Poppins;
    font-style: normal;
    font-weight: normal;
    font-size: 1.7vw;
    color: #7D7D7D;
}

meter {
    width: 80%;
    height: 100%;
}

/* styling the meter background*/
meter::-webkit-meter-bar {
    background: none; /* Required to get rid of the default background property */
    border: 0;
    border-radius: 5px;
  }
/*play with optimum value colours and set optimum value to entire bar for
gradient*/
meter::-webkit-meter-optimum-value {
    background: linear-gradient(90deg, #FFBCBC 0%, #BD94D8 47.52%, #7468F8 100%);
    border-radius:5px;
    transition: width .2s;
}

/*To change the order of the bars (largest must be first, change the flexbox order 
of these invidivual elements*/
.repeatyourself {
    order:1;
}
.slowdown {
    order:2;
}
.rephrase {
    order:3;
}
.provideexample {
    order:4;
}







/*To NOT display certain elements when the screen is smaller than x size
.spotbackground {
    width: inherit;
    height: inherit;
    object-fit: scale-down;
    border: red solid 2px;
}*/


/* @media all and (max-width: 480px) {
  .mydiv { display: none; }
} */